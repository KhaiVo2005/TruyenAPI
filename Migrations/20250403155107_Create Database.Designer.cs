// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TruyenAPI.Data;

#nullable disable

namespace TruyenAPI.Migrations
{
    [DbContext(typeof(TruyenDbContext))]
    [Migration("20250403155107_Create Database")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TruyenAPI.Models.Chapter", b =>
                {
                    b.Property<Guid>("ChapterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ChapterNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("StoryID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ChapterID");

                    b.HasIndex("StoryID");

                    b.ToTable("chapters");
                });

            modelBuilder.Entity("TruyenAPI.Models.ChapterImage", b =>
                {
                    b.Property<Guid>("ChapterImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChapterID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("ChapterImageID");

                    b.HasIndex("ChapterID");

                    b.ToTable("chapterImages");
                });

            modelBuilder.Entity("TruyenAPI.Models.Story", b =>
                {
                    b.Property<Guid>("StoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StoryDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("StoryImage")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("StoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StoryID");

                    b.ToTable("stories");
                });

            modelBuilder.Entity("TruyenAPI.Models.Chapter", b =>
                {
                    b.HasOne("TruyenAPI.Models.Story", null)
                        .WithMany("Chapters")
                        .HasForeignKey("StoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TruyenAPI.Models.ChapterImage", b =>
                {
                    b.HasOne("TruyenAPI.Models.Chapter", null)
                        .WithMany("ChapterImages")
                        .HasForeignKey("ChapterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TruyenAPI.Models.Chapter", b =>
                {
                    b.Navigation("ChapterImages");
                });

            modelBuilder.Entity("TruyenAPI.Models.Story", b =>
                {
                    b.Navigation("Chapters");
                });
#pragma warning restore 612, 618
        }
    }
}
